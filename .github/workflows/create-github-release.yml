name: Create Github Release

on:
  workflow_dispatch:
    branches:
      - master

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Git
        run: sudo apt-get update && sudo apt-get install -y git
      - name: GIT comitter configuration
        run: git config --global user.email "glaucio.porcidesczekailo@atos.net" && git config --global user.name "Glaucio Czekailo"
      - name: just a test
        run: |
          MULTI_LINES_TEXT="this is line one
                  this is line two
                  this is line three"

          echo "MULTI_LINES_TEXT_ENV_VAR<<EOF" >> $GITHUB_ENV  
          # here we can place the command that will generate multi-line text
          echo "$MULTI_LINES_TEXT" >> $GITHUB_ENV   
          echo "EOF" >> $GITHUB_ENV
      - name: print the env
        run: |
          echo "env:"
          echo "${{ env.MULTI_LINES_TEXT_ENV_VAR }}"
      - name: another test        
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source ci/build_release_candidate.sh
          changelog=$(getChangelog "3.4.0-RC2")
          echo "Result: $changelog" 
          cl=$(echo "$changelog")
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$cl" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
      - name: print changelog env
        run: |
          echo "env:"
          echo "${{ env.CHANGELOG }}"
      #- name: Checkout code
      #  uses: actions/checkout@v2

      #- name: Get previous tag
      #  id: prev_tag
      #  run: |
      #    echo ::set-output name=prev_tag::$(git describe --abbrev=0 $(git rev-list --tags='v*' --skip=1 --max-count=1))

      #- name: Get current tag
      #  id: current_tag
      #  run: echo ::set-output name=current_tag::$(echo "${GITHUB_REF#refs/tags/}")

      #- name: List commits between tags
      #  id: commits
      #  run: |
      #    echo "Commits between ${prev_tag} and ${current_tag}:"
      #    git log --pretty=format:"%h %s" ${prev_tag}...${current_tag}

      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  with:
      #    tag_name: ${{ steps.current_tag.outputs.current_tag }}
      #    release_name: ${{ steps.current_tag.outputs.current_tag }}
      #    body: |
      #      Commits between ${prev_tag} and ${current_tag}:
      #      ${{ steps.commits.outputs.commits }}
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
